{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/forecast/forecast.component.css","webpack:///./src/app/components/forecast/forecast.component.html","webpack:///./src/app/components/forecast/forecast.component.ts","webpack:///./src/app/modules/angular-material/angular-material.module.ts","webpack:///./src/app/modules/layouts/layouts.module.ts","webpack:///./src/app/pipes/sort-cities.pipe.ts","webpack:///./src/app/services/cities.service.ts","webpack:///./src/app/services/constants.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/get-browser-ip.service.ts","webpack:///./src/app/services/history.service.ts","webpack:///./src/app/services/owm-data.service.ts","webpack:///./src/app/services/owm-fallback-data.service.ts","webpack:///./src/app/services/owm-stats.service.ts","webpack:///./src/app/services/owm.service.ts","webpack:///./src/app/states/app.actions.ts","webpack:///./src/app/states/app.state.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-forecast></app-forecast>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'owm-a6-fb';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AngularMaterialModule } from './modules/angular-material/angular-material.module';\nimport { LayoutsModules } from './modules/layouts/layouts.module';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { ForecastComponent } from './components/forecast/forecast.component';\nimport { SortCitiesPipe } from './pipes/sort-cities.pipe';\n\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { AppUserState } from './states/app.state';\n\n@NgModule({\n  declarations: [AppComponent, ForecastComponent, SortCitiesPipe],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    LayoutsModules,\n    NgxsModule.forRoot([\n      AppUserState,\n    ]),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot()\n  ],\n  exports: [],\n  providers: [SortCitiesPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".forecast-card {\\n  height: 95vh;\\n  padding: 5px;\\n  background-color: rgb(132, 162, 243);\\n}\\n\\n.content {\\n  font-size: 16px;\\n}\\n\\n.scroll-this {\\n  overflow: auto;\\n}\\n\\n.table-data_cell_empty-background {\\n  min-width: 120px;\\n  margin: 2px;\\n}\\n\\n.table-header-background {\\n  min-width: 120px;\\n  margin: 2px;\\n  background-color: rgba(119, 139, 255, 0.575);\\n}\\n\\n.table-00-background {\\n  padding: 5px 2px;\\n}\\n\\n.table-date_cell-background {\\n  margin: 2px;\\n  padding: 5px 2px;\\n}\\n\\n.table-data_cell-background {\\n  min-width: 120px;\\n  margin: 2px;\\n  padding: 2px 0 2px 0;\\n  /* background-color: rgb(100, 141, 253); */\\n}\\n\\n.table-secondary_data_line {\\n  margin: 2px 0 2px 0;\\n}\\n\\n.table-secondary_data_icon img {\\n    width: 60%;\\n    height: auto;\\n  }\\n\\n.table-secondary_data-opacity {\\n  opacity: 0.6;\\n  /* margin: 2px 0 2px 0; */\\n}\\n\\n@media only screen {\\n  .content {\\n    font-size: 60%;\\n  }\\n\\n  img {\\n    width: 25%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-width: 600px) {\\n  .content {\\n    font-size: 70%;\\n  }\\n\\n  img {\\n    width: 40%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-width: 1000px) {\\n  .content {\\n    font-size: 75%;\\n  }\\n\\n  img {\\n    width: 50%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-width: 1300px) {\\n  .content {\\n    font-size: 80%;\\n  }\\n\\n  img {\\n    width: 75%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (max-height: 400px) {\\n  .content {\\n    font-size: 40%;\\n  }\\n\\n  img {\\n    width: 10%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-height: 400px) {\\n  .content {\\n    font-size: 60%;\\n  }\\n\\n  img {\\n    width: 15%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-height: 600px) {\\n  .content {\\n    font-size: 80%;\\n  }\\n\\n  img {\\n    width: 20%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-height: 700px) {\\n  .content {\\n    font-size: auto;\\n  }\\n\\n  img {\\n    width: 30%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-height: 800px) {\\n  img {\\n    width: 35%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-height: 900px) {\\n  img {\\n    width: 40%;\\n    height: auto;\\n  }\\n}\\n\"","module.exports = \"<mat-card class=\\\"forecast-card\\\">\\n  <div fxLayout=\\\"column\\\" fxFill class=\\\"content\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n      <span\\n        fxFlex=\\\"1 1\\\"\\n        fxLayoutAlign=\\\"start center\\\"\\n        *ngIf=\\\"!loadingCities && !loading\\\"\\n        fxFlexOrder.xs=\\\"3\\\"\\n      >\\n        <span [fxHide]=\\\"loading\\\">\\n          {{ weatherData?.updated ? 'Updated:' : 'Sample:' }}\\n          {{\\n            weatherData?.updated || (weatherData?.list)[0].dt * 1000\\n              | date: 'EEE dd MMM HH:mm'\\n          }}\\n          <br />\\n          {{ 'Forecast time slots: ' + weatherData?.cnt }} <br />\\n          {{ ip ? 'IP: ' + ip : '' }}\\n        </span>\\n      </span>\\n      <span\\n        fxFlex=\\\"1 1\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n        fxFlexOrder.xs=\\\"1\\\"\\n      >\\n        <h4>OWM Forecast</h4>\\n      </span>\\n      <span\\n        fxFlex=\\\"1 1\\\"\\n        fxLayoutAlign=\\\"center end\\\"\\n        fxLayoutAlign.xs=\\\"center start\\\"\\n        [fxHide]=\\\"loadingCities || loading\\\"\\n        fxFlexOrder.xs=\\\"2\\\"\\n      >\\n        <span fxFlex fxFlexOrder.xs=\\\"2\\\"></span>\\n        <mat-form-field fxFlexOrder.xs=\\\"1\\\">\\n          <mat-select\\n            placeholder=\\\"City\\\"\\n            [(value)]=\\\"selectedCityId\\\"\\n            (selectionChange)=\\\"onChange()\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let city of (cities$ | async | keyvalue | sortCities)\\\"\\n              [value]=\\\"city.key\\\"\\n            >\\n              <span fxFlex> {{ city.value.name }} </span>\\n              <span fxFlex fxLayoutAlign=\\\"end center\\\">\\n                {{ city.value.iso2 }}\\n              </span>\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </span>\\n    </div>\\n\\n    <div\\n      fxFlex\\n      fxLayout=\\\"row\\\"\\n      [fxHide]=\\\"loading || loadingCities\\\"\\n      class=\\\"scroll-this\\\"\\n    >\\n      <div fxFlex=\\\"8%\\\" fxLayout=\\\"column\\\" fxFill>\\n        <div\\n          fxFlex=\\\"10%\\\"\\n          fxFlex.gt-sm=\\\"7%\\\"\\n          fxLayout=\\\"column\\\"\\n          class=\\\"table-00-background\\\"\\n        >\\n          <span fxLayoutAlign=\\\"end center\\\">Hour</span>\\n          <div fxFlex></div>\\n          <span fxLayoutAlign=\\\"start start\\\">Date</span>\\n        </div>\\n\\n        <div fxFlex fxLayout=\\\"column\\\" fxFill>\\n          <div\\n            fxFlex\\n            fxLayoutAlign=\\\"start center\\\"\\n            class=\\\"table-date_cell-background\\\"\\n            *ngFor=\\\"\\n              let dataDaily of (weatherData?.listByDate | keyvalue);\\n              index as $index\\n            \\\"\\n          >\\n            <span fxLayout=\\\"column\\\" fxLayout.gt-md=\\\"row\\\">\\n              <span> {{ dataDaily.key | date: 'EEE' }}&nbsp; </span>\\n              <span> {{ dataDaily.key | date: 'dd MMM' }} </span>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div fxFlex fxLayout=\\\"column\\\" class=\\\"scroll-this\\\">\\n        <div fxFlex=\\\"10%\\\" fxFlex.gt-sm=\\\"7%\\\" fxLayout=\\\"row\\\">\\n          <span\\n            fxFlex\\n            fxLayoutAlign=\\\"center center\\\"\\n            class=\\\"table-header-background\\\"\\n            *ngFor=\\\"let timeSlot of timeTemplate; index as ind\\\"\\n            [ngStyle]=\\\"{\\n              'background-color': timeTemplate[ind].bgColor,\\n              color: timeTemplate[ind].textColor\\n            }\\\"\\n          >\\n            {{ (timeSlot.hour > 9 ? '' : '0') + timeSlot.hour + ':00' }}\\n          </span>\\n        </div>\\n\\n        <div\\n          fxFlex\\n          *ngFor=\\\"\\n            let dataDaily of (weatherData?.listByDate | keyvalue);\\n            index as $index\\n          \\\"\\n        >\\n          <span\\n            fxFlex\\n            fxLayout=\\\"row\\\"\\n            *ngFor=\\\"let timeSlot of timeTemplate; index as ind\\\"\\n          >\\n            <span\\n              fxFlex\\n              class=\\\"table-data_cell_empty-background\\\"\\n              *ngIf=\\\"!dataDaily.value[timeSlot.hour]\\\"\\n            ></span>\\n            <span\\n              fxFlex\\n              *ngIf=\\\"dataDaily.value[timeSlot.hour]\\\"\\n              class=\\\"table-data_cell-background\\\"\\n              [ngStyle]=\\\"{\\n                'background-color': timeTemplate[ind].bgColor,\\n                color: timeTemplate[ind].textColor\\n              }\\\"\\n              fxLayout=\\\"column\\\"\\n              fxLayoutAlign=\\\"center center\\\"\\n            >\\n              <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                <img\\n                  [src]=\\\"\\n                    iconsUrl +\\n                    dataDaily.value[timeSlot.hour].weather[0].icon +\\n                    '.png'\\n                  \\\"\\n                />\\n                {{ dataDaily.value[timeSlot.hour].weather[0].main }}\\n                {{\\n                  dataDaily.value[timeSlot.hour].main.temp | number: '1.0-0'\\n                }}&#176;C\\n              </div>\\n\\n              <div fxFlex fxLayout=\\\"column\\\" >\\n                <span\\n                  fxFlex=\\\"25%\\\"\\n                  fxLayout=\\\"row\\\"\\n                  fxLayoutAlign=\\\"start end\\\"\\n                  class=\\\"table-secondary_data_line\\\"\\n                >\\n                  <img [src]=\\\"iconPressure\\\" />\\n                  <span fxFill class=\\\"table-secondary_data-opacity\\\">\\n                    <span fxFlex=\\\"50%\\\" fxLayoutAlign=\\\"end end\\\">\\n                      &nbsp;{{\\n                        dataDaily.value[timeSlot.hour].main.pressure\\n                          | number: '1.0-0'\\n                      }}\\n                    </span>\\n                    <span fxFlex fxLayoutAlign=\\\"start end\\\">\\n                      &nbsp;<small>mmHg</small>\\n                    </span>\\n                  </span>\\n                </span>\\n\\n                <span\\n                fxFlex=\\\"25%\\\"\\n                fxLayout=\\\"row\\\"\\n                fxLayoutAlign=\\\"start end\\\"\\n                class=\\\"table-secondary_data_line\\\"\\n                >\\n                <img [src]=\\\"iconWind\\\" />\\n                <span fxFill class=\\\"table-secondary_data-opacity\\\">\\n                  <span fxFlex=\\\"50%\\\" fxLayoutAlign=\\\"end end\\\">\\n                    &nbsp;{{\\n                      dataDaily.value[timeSlot.hour].wind.speed\\n                      | number: '1.0-0'\\n                    }}\\n                  </span>\\n                  <span fxFlex fxLayoutAlign=\\\"start end\\\">\\n                    &nbsp;<small>m/s</small>\\n                  </span>\\n                </span>\\n              </span>\\n\\n              <span\\n              fxFlex=\\\"25%\\\"\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"start end\\\"\\n              class=\\\"table-secondary_data_line\\\"\\n              >\\n              <img [src]=\\\"iconHumidity\\\" />\\n              <span fxFill class=\\\"table-secondary_data-opacity\\\">\\n                <span fxFlex=\\\"50%\\\" fxLayoutAlign=\\\"end end\\\">\\n                  &nbsp;{{\\n                    dataDaily.value[timeSlot.hour].main.humidity\\n                    | number: '1.0-0'\\n                      }}\\n                    </span>\\n                    <span fxFlex fxLayoutAlign=\\\"start end\\\">\\n                      &nbsp;<small>%</small>&nbsp;\\n                    </span>\\n                  </span>\\n                </span>\\n              </div>\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n      <span fxFlex fxLayoutAlign=\\\"start center\\\">\\n        <span *ngIf=\\\"!loadingStats\\\">\\n          OWM Requests:{{ stats.r || 0 }} Updates:{{ stats.u || 0 }}\\n        </span>\\n      </span>\\n      <span fxFlex></span>\\n      <span fxFlex fxLayoutAlign=\\\"end center\\\">\\n        <span *ngIf=\\\"!loadingCities && !loading\\\" fxLayoutAlign=\\\"end center\\\">\\n          {{ cities[selectedCityId].name + ' ' }} Requests:{{\\n            cities[selectedCityId].r || 0\\n          }}\\n          Updates:{{ cities[selectedCityId].u || 0 }}\\n        </span>\\n      </span>\\n    </div>\\n    <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"loading\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n  </div>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { OwmDataService } from '../../services/owm-data.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Store } from '@ngxs/store';\nimport { SetUserState } from '../../states/app.actions';\nimport { OwmStats } from '../../models/owm-stats.model';\nimport { TimeTemplate } from '../../models/hours.model';\nimport { ConstantsService } from '../../services/constants.service';\nimport { CitiesService } from '../../services/cities.service';\nimport { OwmStatsService } from '../../services/owm-stats.service';\nimport { GetBrowserIpService } from '../../services/get-browser-ip.service';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css']\n})\nexport class ForecastComponent implements OnInit {\n  selectedCityId: string = ConstantsService.defaultCityId;\n  timeTemplate: TimeTemplate[] = ConstantsService.timeTemplate;\n  iconsUrl: string = ConstantsService.owmIconsUrl;\n  iconWind: string = ConstantsService.windIconsUrl;\n  iconHumidity: string = ConstantsService.humidityIconsUrl;\n  iconPressure: string = ConstantsService.pressureIconsUrl;\n  loading: boolean;\n  loadingCities: boolean;\n  loadingStats: boolean;\n  weatherDataSubscription$: Subscription;\n  cities$: Observable<{}>;\n  cities: {};\n  stats: OwmStats;\n  weatherData: any;\n  ip: string;\n\n  constructor(\n    private _cities: CitiesService,\n    private _data: OwmDataService,\n    private _owmStats: OwmStatsService,\n    private _store: Store,\n    private _ip: GetBrowserIpService\n  ) {}\n\n  ngOnInit() {\n    this.loadingCities = true;\n    this.cities$ = this._cities.getData().pipe(\n      tap(cities => {\n        this.cities = cities;\n        this.loadingCities = false;\n      })\n    );\n    this.loadingStats = true;\n    this._owmStats.getData().subscribe(stats => {\n      this.stats = stats;\n      this.loadingStats = false;\n    });\n    this._ip.getIP().subscribe(ip => {\n      this.ip = ip;\n    });\n    this.onChange();\n  }\n\n  onChange() {\n    this.loading = true;\n    this.weatherDataSubscription$ = this._data\n      .getData(this.selectedCityId)\n      .subscribe(\n        data => {\n          this.weatherData = data;\n          this.weatherDataSubscription$.unsubscribe();\n          this.loading = false;\n          this._store.dispatch(\n            new SetUserState(this.selectedCityId)\n          );\n        },\n        err => console.log('ForecastComponent data Error:', err)\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatSelectModule,\n  MatProgressSpinnerModule,\n  MatCardModule\n  // MatTableModule,\n  // MatButtonModule,\n  // MatIconModule,\n  // MatProgressBarModule,\n  // MatDividerModule,\n  // MatPaginatorModule,\n  // MatSidenavModule,\n  // MatToolbarModule,\n  // MatListModule,\n  // MatSortModule,\n  // MatSlideToggleModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  exports: [MatSelectModule, MatProgressSpinnerModule, MatCardModule]\n})\nexport class AngularMaterialModule {}\n","import { FlexLayoutModule } from '@angular/flex-layout';\n\nexport const LayoutsModules = [FlexLayoutModule];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { City } from '../models/city.model';\n\ninterface CityByKey {\n  key?: string;\n  value?: City;\n}\n\n@Pipe({\n  name: 'sortCities'\n})\nexport class SortCitiesPipe implements PipeTransform {\n\n  transform(cities: CityByKey[]): CityByKey[] {\n    return cities ? cities.sort((a: CityByKey, b: CityByKey) => (a.value.name < b.value.name ? -1 : 1)) : [];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { from } from 'rxjs';\nimport { switchMap, take, tap, share } from 'rxjs/operators';\nimport { City } from '../models/city.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n\n  constructor(private _db: AngularFireDatabase) {}\n\n  getData() {\n    return from(this._db.object('/cities').valueChanges()).pipe(share());\n  }\n\n  updateReads(cityId) {\n    const ref = this._db.object(`/cities/${cityId}`);\n    return ref.valueChanges().pipe(\n      take(1),\n      switchMap((city: City) => {\n        return from(ref.update({ 'r': ((city.r || 0 ) + 1) }));\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TimeTemplate } from '../models/hours.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantsService {\n  constructor() {}\n\n  public static readonly owmData = 'owm';\n  public static readonly historyData = 'history';\n  public static readonly default5DayForecastUrl = 'https://api.openweathermap.org/data/2.5/forecast';\n  public static readonly defaultUnits = 'metric';\n  public static readonly defaultCityId = '2643743'; // London, UK\n  public static readonly defaultAPPID = 'a354c550c575036102a4dce8d36e75d1';\n  public static readonly owmFallbackData = 'assets/owm-fallback-data.json';\n  public static readonly getIpUrl = 'https://us-central1-owm-a6-fb.cloudfunctions.net/getip';\n  public static readonly ipv4RE = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\n  public static readonly ipv6RE = new RegExp(`/^\\s*((\n    ([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}\n    (:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|\n    (([0-9A-Fa-f]{1,4}:){5}\n    (((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|\n    (([0-9A-Fa-f]{1,4}:){4}\n    (((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|\n    (([0-9A-Fa-f]{1,4}:){3}\n    (((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|\n    (([0-9A-Fa-f]{1,4}:){2}\n    (((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|\n    (([0-9A-Fa-f]{1,4}:){1}\n    (((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|\n    (:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\n    (\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/`, 'i');\n\n  public static readonly owmIconsUrl = 'https://openweathermap.org/img/w/';\n  public static readonly windIconsUrl = 'assets/icons8-windsock-16.png';\n  public static readonly pressureIconsUrl = 'assets/icons8-atmospheric-pressure-16.png';\n  public static readonly humidityIconsUrl = 'assets/icons8-hygrometer-16.png';\n\n\n  public static readonly timeTemplate: TimeTemplate[] = [\n    { hour:  0, bgColor: '#4060bb', textColor: 'white'},\n    { hour:  3, bgColor: '#4060bb', textColor: 'white'},\n    { hour:  6, bgColor: '#5080dd', textColor: 'white'},\n    { hour:  9, bgColor: '#70b0ff', textColor: 'black'},\n    { hour: 12, bgColor: '#90c0ff', textColor: 'black'},\n    { hour: 15, bgColor: '#90c0ff', textColor: 'black'},\n    { hour: 18, bgColor: '#70b0ff', textColor: 'black'},\n    { hour: 21, bgColor: '#5080dd', textColor: 'white'}\n  ];\n\n  public static readonly defaultOwmData = 'assets/owm-data-sample.json';\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ConstantsService } from './constants.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor(private _db: AngularFireDatabase) {}\n\n  getData(cityId) {\n    return this._db.object(ConstantsService.owmData + '/' + cityId).valueChanges();\n  }\n  setData(cityId, data) {\n    const ref = this._db.object(ConstantsService.owmData + '/' + cityId);\n    return ref.set(data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ConstantsService } from './constants.service';\nimport { of, Observable } from 'rxjs';\nimport { switchMap, shareReplay, retry } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetBrowserIpService {\n  private _cache$: Observable<string>;\n  countCache = 0;\n  countRequests = 0;\n\n  constructor(private _http: HttpClient) {}\n\n  getIP() {\n    if (!this._cache$) {\n      this._cache$ = this.requestIP().pipe(\n        switchMap(ipString => {\n          if (this.validateIP(ipString)) {\n            return of(ipString);\n          }\n          return of(null);\n        }),\n        shareReplay(1)\n      );\n    }\n    return this._cache$;\n  }\n\n  requestIP() {\n    return this._http\n      .get(ConstantsService.getIpUrl, { responseType: 'text' })\n      .pipe(retry(3));\n  }\n\n  validateIP(testString) {\n    return (\n      ConstantsService.ipv4RE.test(testString) ||\n      ConstantsService.ipv6RE.test(testString)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ConstantsService } from './constants.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HistoryService {\n  constructor(private _db: AngularFireDatabase) {}\n\n  setData(data) {\n    const refKey = ConstantsService.historyData + '/' + data.ip.replace(/\\./g, '-') + '/' + data.time;\n    console.log(refKey);\n    const ref = this._db.object(refKey);\n    return ref.set(data.cityId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of, from } from 'rxjs';\nimport { switchMap, catchError, tap } from 'rxjs/operators';\nimport { OwmService } from './owm.service';\nimport { DataService } from './data.service';\nimport { CitiesService } from './cities.service';\nimport { OwmFallbackDataService } from './owm-fallback-data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmDataService {\n  constructor(\n    private _owm: OwmService,\n    private _data: DataService,\n    private _cities: CitiesService,\n    private  _owmFallback: OwmFallbackDataService\n  ) {}\n\n  setListByDate(data) {\n    data = data || { list: [] };\n    data.listByDate = data.list.reduce((accumulator, item) => {\n      const dateObj = new Date(item.dt * 1000);\n      const hour = dateObj.getUTCHours();\n      const date = dateObj.setHours(0);\n\n      if (accumulator[date]) {\n        accumulator[date][hour] = item;\n      } else {\n        accumulator[date] = {};\n        accumulator[date][hour] = item;\n      }\n      return accumulator;\n    }, {});\n    // 'data.list' is kept for testing only, otherwise is not needed anymore\n    data.updated = new Date().valueOf();\n    return data;\n  }\n\n  isExpired(data): boolean {\n    // expired data is when [0] is older than 3 hours\n    const now = new Date().valueOf();\n    const firstSample = data.list[0].dt * 1000;\n    const diff = now - (data.updated || firstSample);\n    return diff > 3 * 3600 * 1000; // 3 hours\n  }\n\n  // Caching the data for 3h\n  // in order to prevent exceeding OWM requsts dev quote.\n  getData(cityId) {\n    return this._cities.updateReads(cityId)\n    .pipe(\n      switchMap(() => from(this._data.getData(cityId))),\n      switchMap((fbdata: any) => {\n        if (fbdata === null || this.isExpired(fbdata)) {\n          return this._owm.getData(cityId).pipe(\n            switchMap(res => of(this.setListByDate(res))),\n            switchMap(res => from(this._data.setData(cityId, res))),\n            switchMap(() => this._data.getData(cityId))\n          );\n        }\n        return of(fbdata);\n      }),\n      catchError(err => {\n        console.log('ERROR: OwmDataService:', err);\n        return this._owmFallback.getData();\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ConstantsService } from './constants.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmFallbackDataService {\n\n  constructor(private _http: HttpClient) { }\n\n  getData() {\n    return this._http.get(ConstantsService.owmFallbackData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmStatsService {\n  constructor(private _db: AngularFireDatabase) {}\n\n  getData() {\n    return this._db.object('/stats').valueChanges();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ConstantsService } from './constants.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmService {\n  constructor(private _http: HttpClient) {}\n\n  getDefaultData(cityId) {\n    return this._http.get<any>(ConstantsService.defaultOwmData);\n  }\n\n  getData(cityId) {\n    const fullUrl =\n      ConstantsService.default5DayForecastUrl +\n      '?id=' +\n      cityId +\n      '&units=' +\n      ConstantsService.defaultUnits +\n      '&APPID=' +\n      ConstantsService.defaultAPPID;\n\n    return this._http.get<any>(fullUrl);\n  }\n}\n","import { AppUserStateModel } from './app.models';\n\nexport class SetUserState {\n  static readonly type = '[activity] set';\n  constructor(public payload: string) {}\n}\n","import { State, Action, StateContext } from '@ngxs/store';\nimport { SetUserState } from './app.actions';\nimport { AppUserStateModel, HistoryRecordModel } from './app.models';\nimport { GetBrowserIpService } from '../services/get-browser-ip.service';\nimport { tap } from 'rxjs/operators';\nimport { HistoryService } from '../services/history.service';\n\nconst defaults = {\n  ip: '',\n  sessionHistory: [\n    {\n      cityId: 'Init',\n      time: new Date().valueOf()\n    }\n  ]\n};\n\n@State<AppUserStateModel>({\n  name: 'activity',\n  defaults\n})\nexport class AppUserState {\n  constructor(\n    private _ip: GetBrowserIpService,\n    private _history: HistoryService\n  ) {}\n\n  @Action(SetUserState)\n  setUserState(context: StateContext<AppUserStateModel>, action: SetUserState) {\n    console.log('payload:', action.payload);\n    return this._ip.getIP().pipe(\n      tap(ip => {\n        const newEntry: HistoryRecordModel = {\n          cityId: action.payload,\n          time: new Date().valueOf()\n        };\n        const update = {\n          ip,\n          sessionHistory: [...context.getState().sessionHistory, newEntry]\n        };\n        context.patchState(update);\n      }),\n      tap(ip => {\n        const history = context.getState().sessionHistory;\n        const { time, cityId } = history[history.length - 1];\n        return this._history.setData({ ip, time, cityId });\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBWFkpsktPetQerfNSIOl2Es67OCFdlGUI',\n    authDomain: 'owm-a6-fb.firebaseapp.com',\n    databaseURL: 'https://owm-a6-fb.firebaseio.com',\n    projectId: 'owm-a6-fb',\n    storageBucket: 'owm-a6-fb.appspot.com',\n    messagingSenderId: '976333526482'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}