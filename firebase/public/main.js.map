{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/forecast/forecast.component.css","webpack:///./src/app/components/forecast/forecast.component.html","webpack:///./src/app/components/forecast/forecast.component.ts","webpack:///./src/app/modules/angular-material/angular-material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-forecast></app-forecast>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'owm-a6-fb';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AppComponent } from './app.component';\nimport { environment } from 'src/environments/environment';\nimport { ForecastComponent } from './components/forecast/forecast.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './modules/angular-material/angular-material.module';\n\n@NgModule({\n  declarations: [AppComponent, ForecastComponent],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n\"","module.exports = \"<p>\\n  forecast works!\\n</p>\\n\\n<mat-form-field>\\n  <mat-select placeholder=\\\"Capital\\\" [(value)]=\\\"selectedCity\\\">\\n    <mat-option *ngFor=\\\"let city of capitals | async\\\" [value]=\\\"city.id\\\">\\n      {{city.capital}}, {{city.country}}, {{city.iso2}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n{{selectedCity}}\\n<ul>\\n  <li *ngFor=\\\"let capital of capitals | async\\\">\\n    {{capital | json}}\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface Capital {\n  capital: string;\n  country: string;\n  iso2: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css']\n})\nexport class ForecastComponent implements OnInit {\n  // citiesRef: AngularFireObject<any>;\n  capitals: Observable<any>;\n  selectedCity;\n\n  constructor(db: AngularFireDatabase) {\n    this.capitals = db\n      .list('/eu-capitals')\n      .valueChanges()\n      .pipe(\n        map(arr => {\n          return arr.sort(\n            (a: Capital, b: Capital) => (a.capital < b.capital ? -1 : 1)\n          );\n        })\n      );\n  }\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  exports: [MatSelectModule]\n})\nexport class AngularMaterialModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBWFkpsktPetQerfNSIOl2Es67OCFdlGUI',\n    authDomain: 'owm-a6-fb.firebaseapp.com',\n    databaseURL: 'https://owm-a6-fb.firebaseio.com',\n    projectId: 'owm-a6-fb',\n    storageBucket: 'owm-a6-fb.appspot.com',\n    messagingSenderId: '976333526482'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}