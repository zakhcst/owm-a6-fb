{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/forecast/forecast.component.css","webpack:///./src/app/components/forecast/forecast.component.html","webpack:///./src/app/components/forecast/forecast.component.ts","webpack:///./src/app/modules/angular-material/angular-material.module.ts","webpack:///./src/app/modules/layouts/layouts.module.ts","webpack:///./src/app/services/cities.service.ts","webpack:///./src/app/services/constants.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/owm-data.service.ts","webpack:///./src/app/services/owm.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,WAAW,CAAC;IACtB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACN;AACiB;AACY;AAEY;AACzB;AAEP;AACZ;AAC8B;AAiB7E;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,EAAE,0FAAiB,CAAC;YAC/C,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,+DAAiB,CAAC,aAAa,CAAC,wEAAW,CAAC,QAAQ,CAAC;gBACrD,gFAAyB;gBACzB,4FAAuB;gBACvB,uGAAqB;gBACrB,8EAAc;aACf;YACD,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;AC7BtB,kCAAkC,iBAAiB,iBAAiB,yCAAyC,GAAG,cAAc,oBAAoB,GAAG,kBAAkB,mBAAmB,GAAG,iCAAiC,qBAAqB,gBAAgB,iBAAiB,yCAAyC,GAAG,uCAAuC,qBAAqB,gBAAgB,GAAG,8BAA8B,qBAAqB,gBAAgB,4CAA4C,oDAAoD,GAAG,0BAA0B,gBAAgB,iBAAiB,GAAG,iCAAiC,gBAAgB,iDAAiD,GAAG,mCAAmC,iBAAiB,GAAG,wBAAwB,cAAc,qBAAqB,KAAK,WAAW,iBAAiB,mBAAmB,KAAK,GAAG,sDAAsD,cAAc,qBAAqB,KAAK,WAAW,iBAAiB,mBAAmB,KAAK,GAAG,uDAAuD,cAAc,qBAAqB,KAAK,WAAW,iBAAiB,mBAAmB,KAAK,GAAG,uDAAuD,cAAc,qBAAqB,KAAK,WAAW,iBAAiB,mBAAmB,KAAK,GAAG,uDAAuD,cAAc,sBAAsB,KAAK,WAAW,kBAAkB,mBAAmB,KAAK,GAAG,G;;;;;;;;;;;ACA/9C,iRAAiR,+CAA+C,GAAG,2GAA2G,GAAG,mCAAmC,miBAAmiB,WAAW,qGAAqG,WAAW,oqBAAoqB,iBAAiB,4GAA4G,6BAA6B,MAAM,iEAAiE,gCAAgC,6VAA6V,wCAAwC,wHAAwH,iBAAiB,siBAAsiB,wCAAwC,GAAG,kDAAkD,MAAM,+SAA+S,sDAAsD,MAAM,wPAAwP,mDAAmD,MAAM,uPAAuP,sDAAsD,iL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArkI;AACe;AAEG;AACN;AAO9D;IAiBE,2BAAoB,OAAsB,EAAU,KAAqB;QAArD,YAAO,GAAP,OAAO,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QACvE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,4EAAgB,CAAC,aAAa,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,4EAAgB,CAAC,aAAa,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,4EAAgB,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,4EAAgB,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,4EAAgB,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,4EAAgB,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,4EAAgB,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,oCAAQ,GAAR,cAAY,CAAC;IAEb,oCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK;aACtC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;aAC5B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAkB6B,sEAAa,EAAiB,yEAAc;OAjB9D,iBAAiB,CAyC7B;IAAD,wBAAC;CAAA;AAzC6B;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AAgBpB;AAW3B;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,iEAAe;gBACf,0EAAwB;gBACxB,+DAAa;aACd;YACD,OAAO,EAAE,CAAC,iEAAe,EAAE,0EAAwB,EAAE,+DAAa,CAAC;SACpE,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;AC5BlC;AAAA;AAAA;AAAwD;AAEjD,IAAM,cAAc,GAAG,CAAC,qEAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFN;AACkB;AACxB;AAMrC;IACE,uBAAoB,GAAwB;QAAxB,QAAG,GAAH,GAAG,CAAqB;IAAG,CAAC;IAEhD,+BAAO,GAAP;QACE,OAAO,IAAI,CAAC,GAAG;aACZ,IAAI,CAAC,cAAc,CAAC;aACpB,YAAY,EAAE;aACd,IAAI,CACH,0DAAG,CAAC,aAAG;YACL,OAAO,GAAG,CAAC,IAAI,CAAC,UAAC,CAAO,EAAE,CAAO,IAAK,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QACpE,CAAC,CAAC,CACH,CAAC;QACJ,iBAAiB;IACnB,CAAC;IAbU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEyB,0EAAmB;OADjC,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AAK3C;IACE;IAAe,CAAC;IAEO,uCAAsB,GAC3C,kDAAkD,CAAC;IAC9B,6BAAY,GAAG,QAAQ,CAAC;IACxB,8BAAa,GAAG,OAAO,CAAC,CAAC,aAAa;IACtC,6BAAY,GAAG,kCAAkC,CAAC;IAElD,4BAAW,GAAG,kCAAkC,CAAC;IACjD,6BAAY,GAAG,kCAAkC,CAAC;IAClD,6BAAY,GAAG,+BAA+B,CAAC;IAC/C,iCAAgB,GAAG,2CAA2C,CAAC;IAC/D,iCAAgB,GAAG,iCAAiC,CAAC;IAErD,8BAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,+BAAc,GAAG,6BAA6B,CAAC;IAhB3D,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AACkB;AAK7D;IACE,qBAAoB,GAAwB;QAAxB,QAAG,GAAH,GAAG,CAAqB;IAAG,CAAC;IAEhD,6BAAO,GAAP,UAAQ,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IACD,6BAAO,GAAP,UAAQ,MAAM,EAAE,IAAI;QAClB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IATU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEyB,0EAAmB;OADjC,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNmB;AACjB;AACiB;AACA;AACE;AAK7C;IACE,wBAAoB,IAAgB,EAAU,KAAkB;QAA5C,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAa;IAAG,CAAC;IAEpE,sCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,GAAG,IAAI,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,WAAW,EAAE,IAAI;YACnD,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;YACzC,IAAM,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YACnC,IAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEjC,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;gBACrB,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACL,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACvB,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aAChC;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,kCAAS,GAAhB,UAAiB,IAAI;QACnB,iDAAiD;QACjD,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACjC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;QAC3C,IAAM,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;QACjD,OAAO,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,UAAU;IAC3C,CAAC;IAED,gCAAO,GAAP,UAAQ,MAAM;QAAd,iBAwBC;QAvBC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CACpC,gEAAS,CACP,UAAC,MAAW;YACV,IAAI,MAAM,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC7C,gDAAgD;gBAChD,OAAO,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CACnC,gEAAS,CAAC,aAAG,IAAI,sDAAE,CAAC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAA3B,CAA2B,CAAC,EAC7C,gEAAS,CAAC,aAAG,IAAI,sDAAE,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAnC,CAAmC,CAAC,EACrD,gEAAS,CAAC,cAAM,YAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAA1B,CAA0B,CAAC,CAC5C,CAAC;aACH;YACD,OAAO,+CAAE,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC;QACD,oBAAoB;QACpB,IAAI;QACJ,oBAAoB;QACpB,uCAAuC;QACvC,kBAAkB;QAClB,IAAI;QACJ,IAAI;SACL,CACF,CAAC;IACJ,CAAC;IAtDU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,uDAAU,EAAiB,yDAAW;OADrD,cAAc,CAuD1B;IAAD,qBAAC;CAAA;AAvD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACO;AACK;AAKvD;IACE,oBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IAEzC,mCAAc,GAAd,UAAe,MAAM;QACnB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,mEAAgB,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,4BAAO,GAAP,UAAQ,MAAM;QACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAM,OAAO,GACX,mEAAgB,CAAC,sBAAsB;YACvC,MAAM;YACN,MAAM;YACN,SAAS;YACT,mEAAgB,CAAC,YAAY;YAC7B,SAAS;YACT,mEAAgB,CAAC,YAAY,CAAC;QAEhC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,OAAO,CAAC,CAAC;IACtC,CAAC;IApBU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE2B,+DAAU;OAD1B,UAAU,CAqBtB;IAAD,iBAAC;CAAA;AArBsB;;;;;;;;;;;;;ACPvB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,2BAA2B;QACvC,WAAW,EAAE,kCAAkC;QAC/C,SAAS,EAAE,WAAW;QACtB,aAAa,EAAE,uBAAuB;QACtC,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-forecast></app-forecast>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'owm-a6-fb';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AngularMaterialModule } from './modules/angular-material/angular-material.module';\nimport { LayoutsModules } from './modules/layouts/layouts.module';\n\nimport { environment } from 'src/environments/environment';\nimport { AppComponent } from './app.component';\nimport { ForecastComponent } from './components/forecast/forecast.component';\n\n@NgModule({\n  declarations: [AppComponent, ForecastComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    LayoutsModules\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".forecast-card {\\n  height: 95vh;\\n  padding: 5px;\\n  background-color: rgb(153, 180, 255);\\n}\\n\\n.content {\\n  font-size: 16px;\\n}\\n\\n.scroll-this {\\n  overflow: auto;\\n}\\n\\n.table-data_cell-background {\\n  min-width: 115px;\\n  margin: 2px;\\n  padding: 5px;\\n  background-color: rgb(100, 141, 253);\\n}\\n\\n.table-data_cell_empty-background {\\n  min-width: 115px;\\n  margin: 2px;\\n}\\n\\n.table-header-background {\\n  min-width: 115px;\\n  margin: 2px;\\n  /* background-color: rgb(232, 235, 180); */\\n  background-color: rgba(119, 139, 255, 0.575);\\n}\\n\\n.table-00-background {\\n  margin: 2px;\\n  padding: 5px;\\n}\\n\\n.table-date_cell-background {\\n  margin: 2px;\\n  background-color: rgba(119, 139, 255, 0.575);\\n}\\n\\n.table-secondary_data-opacity {\\n  opacity: 0.4;\\n}\\n\\n@media only screen {\\n  .content {\\n    font-size: 60%;\\n  }\\n\\n  img {\\n    width: 40%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 600px) {\\n  .content {\\n    font-size: 80%;\\n  }\\n\\n  img {\\n    width: 40%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-height: 600px) {\\n  .content {\\n    font-size: 80%;\\n  }\\n\\n  img {\\n    width: 40%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 1000px) {\\n  .content {\\n    font-size: 90%;\\n  }\\n\\n  img {\\n    width: 50%;\\n    height: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 1300px) {\\n  .content {\\n    font-size: 100%;\\n  }\\n\\n  img {\\n    width: 100%;\\n    height: auto;\\n  }\\n}\\n\"","module.exports = \"<mat-card class=\\\"forecast-card\\\">\\n  <div fxLayout=\\\"column\\\" fxFill class=\\\"content\\\">\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n      <span fxFlex=\\\"1 1\\\" fxLayoutAlign=\\\"start center\\\">\\n        <span [fxHide]=\\\"loading\\\">\\n          {{weatherData?.updated ? 'Updated:' : 'Sample:'}} {{(weatherData?.updated || weatherData?.list[0].dt * 1000)\\n          |\\n          date: 'EEE dd MMM HH:mm'}} {{'Time slots: ' + weatherData?.cnt}}\\n        </span>\\n      </span>\\n      <h4 fxFlex=\\\"1 1\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n        OWM Forecast\\n        <mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n      </h4>\\n      <span fxFlex=\\\"1 1\\\" fxLayoutAlign=\\\"end center\\\">\\n        <mat-form-field [fxHide]=\\\"loading\\\">\\n          <mat-select placeholder=\\\"City\\\" [(value)]=\\\"selectedCityId\\\" (selectionChange)=\\\"onChange()\\\">\\n            <mat-option *ngFor=\\\"let city of cities$ | async\\\" [value]=\\\"city.id\\\">\\n              <span fxFlex>\\n                {{city.name}}\\n              </span>\\n              <span fxFlex fxLayoutAlign=\\\"end center\\\">\\n                {{city.iso2}}\\n              </span>\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </span>\\n    </div>\\n\\n    <div fxFlex fxLayout=\\\"row\\\" [fxHide]=\\\"loading\\\" class=\\\"scroll-this\\\">\\n\\n      <div fxFlex=\\\"10%\\\" fxLayout=\\\"column\\\" fxFill>\\n        <div fxFlex=\\\"10%\\\" fxLayout=\\\"column\\\" class=\\\"table-00-background\\\">\\n          <span fxLayoutAlign=\\\"end center\\\">Hour</span>\\n          <div fxFlex></div>\\n          <span fxLayoutAlign=\\\"start start\\\">Date</span>\\n        </div>\\n\\n        <div fxFlex fxLayout=\\\"column\\\" fxFill>\\n          <div fxFlex fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let dataDaily of weatherData?.listByDate | keyvalue; index as $index;\\\">\\n            <span fxLayout=\\\"column\\\" fxLayout.gt-md=\\\"row\\\">\\n              <span>\\n                {{dataDaily.key | date: 'EEE'}}&nbsp;\\n              </span>\\n              <span>\\n                {{dataDaily.key | date: 'dd MMM'}}\\n              </span>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div fxFlex fxLayout=\\\"column\\\" class=\\\"scroll-this\\\">\\n\\n        <div fxFlex=\\\"10%\\\" fxLayout=\\\"row\\\">\\n          <span fxFlex fxLayoutAlign=\\\"center center\\\" class=\\\"table-header-background\\\" *ngFor=\\\"let hour of hoursTemplate\\\">\\n            {{(hour > 9 ? '' : '0' ) + hour + ':00' }}\\n          </span>\\n        </div>\\n\\n        <div fxFlex *ngFor=\\\"let dataDaily of weatherData?.listByDate | keyvalue; index as $index;\\\">\\n\\n          <span fxFlex fxLayout=\\\"row\\\" *ngFor=\\\"let hour of hoursTemplate\\\">\\n            <span fxFlex class=\\\"table-data_cell_empty-background\\\" *ngIf=\\\"!dataDaily.value[hour]\\\"></span>\\n            <span fxFlex class=\\\"table-data_cell-background\\\" *ngIf=\\\"dataDaily.value[hour]\\\" fxLayout=\\\"column\\\"\\n              fxLayoutAlign=\\\"center center\\\">\\n\\n              <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <img fxHide.xs [src]=\\\"iconsUrl + dataDaily.value[hour].weather[0].icon + '.png'\\\">\\n                {{dataDaily.value[hour].weather[0].main }} {{dataDaily.value[hour].main.temp | number:'1.0-0'}}&#176;C\\n              </span>\\n\\n              <small fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\n                <span fxLayout=\\\"row\\\" fxHide.xs class=\\\"table-secondary_data-opacity\\\" fxLayoutAlign=\\\"start end\\\">\\n                  <img fxHide.xs [src]=\\\"iconPressure\\\">\\n                  &nbsp;{{dataDaily.value[hour].main.pressure | number:'1.0-0'}}&nbsp;<small>mm<br>Hg</small>\\n                </span>\\n                <span fxLayout=\\\"row\\\" fxHide.xs class=\\\"table-secondary_data-opacity\\\" fxLayoutAlign=\\\"start end\\\">\\n                  <img fxHide.xs [src]=\\\"iconWind\\\">\\n                  &nbsp;{{dataDaily.value[hour].wind.speed | number:'1.0-0'}}&nbsp;<small>m/s</small>\\n                </span>\\n                <span fxLayout=\\\"row\\\" fxHide.xs class=\\\"table-secondary_data-opacity\\\" fxLayoutAlign=\\\"start end\\\">\\n                  <img fxHide.xs [src]=\\\"iconHumidity\\\">\\n                  &nbsp;{{dataDaily.value[hour].main.humidity | number:'1.0-0'}}<small>%</small>\\n                </span>\\n              </small>\\n            </span>\\n\\n          </span>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { OwmDataService } from '../../services/owm-data.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { ConstantsService } from '../../services/constants.service';\nimport { CitiesService } from '../../services/cities.service';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css']\n})\nexport class ForecastComponent implements OnInit {\n  selectedCityId: number;\n  cities$: Observable<any>;\n  // weatherData$;\n  weatherData;\n  data: any;\n  weatherDataSubscription: Subscription;\n  hoursTemplate: number[];\n  hoursBGTemplate: string[];\n  iconsUrl: string;\n  iconTemp: string;\n  iconWind: string;\n  iconHumidity: string;\n  iconPressure: string;\n  isExpired: any;\n  loading: boolean;\n\n  constructor(private _cities: CitiesService, private _data: OwmDataService) {\n    this.cities$ = _cities.getData();\n    this.selectedCityId = ConstantsService.defaultCityId;\n    this.hoursTemplate = ConstantsService.hoursTemplate;\n    this.iconsUrl = ConstantsService.owmIconsUrl;\n    this.iconTemp = ConstantsService.tempIconsUrl;\n    this.iconWind = ConstantsService.windIconsUrl;\n    this.iconPressure = ConstantsService.pressureIconsUrl;\n    this.iconHumidity = ConstantsService.humidityIconsUrl;\n    this.data = _data;\n    this.onChange();\n  }\n  ngOnInit() {}\n\n  onChange() {\n    this.loading = true;\n    this.weatherDataSubscription = this._data\n      .getData(this.selectedCityId)\n      .subscribe(data => {\n        this.weatherData = data;\n        this.weatherDataSubscription.unsubscribe();\n        this.loading = false;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatSelectModule,\n  MatProgressSpinnerModule,\n  MatCardModule\n  // MatTableModule,\n  // MatButtonModule,\n  // MatIconModule,\n  // MatProgressBarModule,\n  // MatDividerModule,\n  // MatPaginatorModule,\n  // MatSidenavModule,\n  // MatToolbarModule,\n  // MatListModule,\n  // MatSortModule,\n  // MatSlideToggleModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  exports: [MatSelectModule, MatProgressSpinnerModule, MatCardModule]\n})\nexport class AngularMaterialModule {}\n","import { FlexLayoutModule } from '@angular/flex-layout';\n\nexport const LayoutsModules = [FlexLayoutModule];\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\nimport { City } from '../models/city.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n  constructor(private _db: AngularFireDatabase) {}\n\n  getData() {\n    return this._db\n      .list('/eu-capitals')\n      .valueChanges()\n      .pipe(\n        map(arr => {\n          return arr.sort((a: City, b: City) => (a.name < b.name ? -1 : 1));\n        })\n      );\n    // error handling\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantsService {\n  constructor() {}\n\n  public static readonly default5DayForecastUrl =\n    'https://api.openweathermap.org/data/2.5/forecast';\n  public static readonly defaultUnits = 'metric';\n  public static readonly defaultCityId = 2643743; // London, UK\n  public static readonly defaultAPPID = 'a354c550c575036102a4dce8d36e75d1';\n\n  public static readonly owmIconsUrl = 'http://openweathermap.org/img/w/';\n  public static readonly tempIconsUrl = 'assets/icons8-temperature-24.png';\n  public static readonly windIconsUrl = 'assets/icons8-windsock-24.png';\n  public static readonly pressureIconsUrl = 'assets/icons8-atmospheric-pressure-24.png';\n  public static readonly humidityIconsUrl = 'assets/icons8-hygrometer-24.png';\n\n  public static readonly hoursTemplate = [0, 3, 6, 9, 12, 15, 18, 21];\n  public static readonly defaultOwmData = 'assets/owm-data-sample.json';\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor(private _db: AngularFireDatabase) {}\n\n  getData(cityId) {\n    return this._db.object(cityId).valueChanges();\n  }\n  setData(cityId, data) {\n    const ref = this._db.object(cityId);\n    return ref.set(data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { OwmService } from './owm.service';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmDataService {\n  constructor(private _owm: OwmService, private _data: DataService) {}\n\n  setListByDate(data) {\n    data = data || { list: [] };\n    data.listByDate = data.list.reduce((accumulator, item) => {\n      const dateObj = new Date(item.dt * 1000);\n      const hour = dateObj.getUTCHours();\n      const date = dateObj.setHours(0);\n\n      if (accumulator[date]) {\n        accumulator[date][hour] = item;\n      } else {\n        accumulator[date] = {};\n        accumulator[date][hour] = item;\n      }\n      return accumulator;\n    }, {});\n    data.updated = new Date().valueOf();\n    return data;\n  }\n\n  public isExpired(data): boolean {\n    // expired data is when [0] is older than 3 hours\n    const now = new Date().valueOf();\n    const firstSample = data.list[0].dt * 1000;\n    const diff = now - (data.updated || firstSample);\n    return diff > 3 * 3600 * 1000; // 3 hours\n  }\n\n  getData(cityId) {\n    console.log('getData OwmDataService')\n    return this._data.getData(cityId).pipe(\n      switchMap(\n        (fbdata: any) => {\n          if (fbdata === null || this.isExpired(fbdata)) {\n            // return this._owm.getDefaultData(cityId).pipe(\n            return this._owm.getData(cityId).pipe(\n              switchMap(res => of(this.setListByDate(res))),\n              switchMap(res => of(this._data.setData(cityId, res))),\n              switchMap(() => this._data.getData(cityId))\n            );\n          }\n          return of(fbdata);\n        }\n        // Error handling...\n        // ,\n        // catchError(e => {\n        //   console.log('ERR switchMap 1', e);\n        //   return of(e);\n        // }\n        // )\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ConstantsService } from './constants.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwmService {\n  constructor(private _http: HttpClient) {}\n\n  getDefaultData(cityId) {\n    console.log('owm getDefaultData');\n    return this._http.get<any>(ConstantsService.defaultOwmData);\n  }\n\n  getData(cityId) {\n    console.log('owm getData');\n    const fullUrl =\n      ConstantsService.default5DayForecastUrl +\n      '?id=' +\n      cityId +\n      '&units=' +\n      ConstantsService.defaultUnits +\n      '&APPID=' +\n      ConstantsService.defaultAPPID;\n\n    return this._http.get<any>(fullUrl);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBWFkpsktPetQerfNSIOl2Es67OCFdlGUI',\n    authDomain: 'owm-a6-fb.firebaseapp.com',\n    databaseURL: 'https://owm-a6-fb.firebaseio.com',\n    projectId: 'owm-a6-fb',\n    storageBucket: 'owm-a6-fb.appspot.com',\n    messagingSenderId: '976333526482'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}